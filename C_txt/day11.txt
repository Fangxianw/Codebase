指针变量是一种特殊的变量，它们类似
    种子文件。通过指针变量可以找到
	另外的一个变量。
指针变量任何时候最多只能和一个别的
    变量捆绑，不同的时候可以和不同
	的变量捆绑。
指针变量有类型，它的类型描述了和它
    捆绑在一起的变量的类型。
指针变量的类型不可以改变，但是可以通过
    一个指针变量得到一个另外类型的
	指针变量

没有捆绑的指针变量内容必须是NULL，这个
    内容就是数字0，这个内容叫空地址
没有捆绑过并且内容不是空地址的指针叫
    野指针。
要避免程序中出现野指针
所有指针变量必须初始化

*不参与指针变量的初始化过程（****）

把存储区的地址赋值给指针变量可以实现指针
    的捆绑。捆绑后的指针才是真正可以使用
	的。
捆绑后的指针在程序中可以用来代表四个
    不同的东西：指针变量本身的存储区，
	这个存储区中的所有数据，另外一个
	存储区，另外这个存储区中的所有数据

指针变量的内容随时可以改变，它可以和
    任意存储区捆绑

程序中经常只关心和指针捆绑的存储区的某种
    特征而不关心他的来源

同一个计算机上所有地址数据大小一样（我们
    的计算机上是4个字节）
同一台计算机上所有指针变量的大小一样
不同类型的指针变量之间赋值不会造成地址
    数据的损失

指针变量的类型决定了和它捆绑的存储区的
    类型而不是反过来

指针类型也可以进行强制类型转换，转换后的
    指针类型决定了捆绑存储区的类型

void*也是一种指针，这种指针没有规定捆绑
    的存储区的类型
这种指针必须首先进行强制类型转换然后才能
    获取捆绑存储区
这种指针通常用来记录来源不明或捆绑存储区
    类型不明的地址

数组做函数形参时真正的形参是一个指针变量
指针变量做形参 函数调用时被复制的是指针
    变量本身的存储区，捆绑存储区只有一份。
    捆绑存储区在两个函数之间共用。
	
预习：
    1.指针（指针做返回值，指针计算，
	   指针和数组）
	2.字符串

作业：
    1.编写函数把调用函数中某个数组里的
        所有存储区内容颠倒	
		（指针变量做函数形参）
	2.编写函数把一个数组中所有存储区内容
	    复制到另外一个数组中
		（指针变量做函数形参，两个
		数组的存储区都是调用函数提供的）
	
	
	
	
	