多个相关字符串的记录方式有两种
1.字符类型二维数组
     有可能造成内存空间浪费，存储空间
	 的使用不灵活
2.指针数组
      是一个数组，其中每个存储区的类型
	  是指针类型
      声明方式如下
	  char *countries[] = {"China", "Russia"}
	  
可以和普通存储区捆绑的指针叫一级指针
可以和一级指针存储区捆绑的指针叫二级指针
可以把指针数组中第一个存储区和一个二级
    指针捆绑，以后就可以通过这个二级指针
	操作指针数组中的所有指针存储区了
二级指针可以用来代表六个不同的东西（在
    所有捆绑都已经实现的情况下）
void*类型的指针有可能是二级的（要转换
    成二级指针再使用）

文件的位置指针记录了下一次文件操作的
    位置
位置指针只是一个整数，这个整数表示这个
    位置到文件开头的距离
每当完成对文件的读写操作后位置指针的位置
    都会调整（跳过刚进行过操作的所有字节）
可以使用一些标准函数修改位置指针的位置
ftell函数可以获得当前位置指针的位置
rewind函数可以把位置指针调整到文件开头
fseek函数可以把位置指针调整到文件中
    任意位置
SEEK_SET      0      代表文件的开头
SEEK_CUR      1      代表当前位置
SEEK_END      2      代表文件尾
距离可正可负

#define是一个预处理指令
这个预处理指令可以用来给数字起名字
用这个预处理指令起的名字统称为宏
预处理指令中名字要写在前边，名字中间
    不能有空格
用宏给数字起名字的时候不可以使用赋值
     操作符
程序中的宏名称会被直接替换成它后面的数字
在程序运行的时候宏是不存在的，而const
    变量是存在的
const变量的数值必须在程序中指定而宏的
     数值可以在编译程序的时候使用-D选项
	 指定
通过使用宏可以在编译命令中决定编译出什么
    结果
	  
宏还可以用来给一个计算公式起名字
计算公式中包含未知数字，可以使用宏的参数
    代表计算公式中的未知数字
在预处理阶段采用二次替换的方式处理带参数
    的宏
宏的参数是用来直接替换的，它不一定代表
    一个数字，所以宏的参数是没有类型的

宏没有自己独立的存储区而函数是有的

宏没有返回值的概念
如果希望可以把一个宏当数字使用就必须把
    这个宏编写成表达式
应该在宏的表达式外边套小括号，这样就保证
    优先计算宏内部的操作符

宏也没有形参
宏内部对参数的修改在宏结束后是可以保留的
编写宏时应该在宏的每个代表数字的参数外加
    小括号，这样可以强制优先计算参数中
	的操作符

预习：
    1.宏操作符
	2.条件编译
    3.多文件程序编写
    4.结构体	
	  
作业：
    1.修改人员信息管理系统实现查询功能
	    从键盘得到一个id，把id对应的人员
		信息打印在屏幕上
	2.编写一个宏根据用户在键盘上输入的
	    一个十六进制数位得到对应的十进制
		数字并打印在屏幕上（要求能支持
		大小写字母）
	  
	  
	  
	  
	  