递归函数内部包含一条（或多条）函数调用语
    句，被调用函数就是它自己

如果一个大问题可以拆分成几个小问题，其中
    有几个小问题和原来的大问题本质一样
	只是难度小一些。这种问题就可以考虑
	采用递归方式解决。
	
递归函数的编写原则
1.编写语句把问题的拆分方式描述出来
2.在函数的开头写一个分支语句处理不可
    拆分的情况（这个分支必须可以让
	函数结束）
	
验证递归函数的方法是设计几组不同的参数，
    第一组参数应该让递归函数做尽可能
	少的事情，以后每组参数都应该在前一组
	参数的基础上变换得到。变换的依据
	是让递归函数多做一点事。

使用递归函数解决的问题通常也可以用循环
    来解决。
使用递归解决问题的思路叫做递归
使用循环解决同样问题的思路叫递推

变量有两个重要属性：生命周期和作用域
这两个属性决定了一个变量可以在什么时候
    什么地方使用
	
一个变量的作用域指可以使用这个变量名称
     的所有语句
根据作用域可以把变量分成三种：全局变量，
    局部变量和块变量

声明在所有函数之外的变量叫全局变量
全局变量的作用域包含程序中所有语句
没有初始化的全局变量自动被初始化成0

声明在函数内部的变量叫局部变量
局部变量的作用域包括函数内部的所有语句

块变量声明在函数内部的大括号中
块变量的作用域包含语句块中的所有语句

变量的生命周期指可以使用变量存储位置
    的时间范围
变量的存储位置在程序运行期间不停被创建
    又不停被回收
根据生命周期也可以把变量分成全局变量，
    局部变量和块变量

全局变量的生命周期是整个程序运行期间

局部变量的生命周期是函数调用期间
函数的形参可以看成是局部变量，它们的生命
    周期也是函数执行期间

块变量的生命周期是语句块运行期间

三种变量的生命周期和作用域都是和同样
    的东西相关

全局变量，局部变量和块变量是可以重名的
同名变量中优先考虑使用块变量，其次是
    局部变量，最后是全局变量
	
声明变量时优先考虑使用块变量，如果不行
    再考虑使用局部变量，最后考虑全局
	变量
	
声明变量时可以使用的关键字
1.auto关键字用来声明自动变量
     如果没有特别说明的局部变量都是自动
	 变量
2.static关键字用来声明静态变量
     静态变量的生命周期和作用域不匹配（
	 一个大另一个小）
	 静态全局变量的生命周期不变，作用域
	 是文件内部的所有语句。
	 静态局部变量的作用域不变，生命周期
	 是整个程序运行期间
	 没有初始化的静态局部变量自动被初始化
	 成0
	 静态局部变量的初始化只在程序开始的
	 时候执行一次
3.const关键字用来声明不可赋值的变量
     这种变量只能在初始化的时候赋值
	 这种变量中存储的数据仍然可能变化
4.volatile关键字也可以用来声明变量
     这种变量的内容随时可能变化
	
程序在内存中的分段
代码段：      用于保存语句转换成的数字
              这个段落在运行是不可以被
			  修改
全局段：      包含所有全局变量和静态
              变量的存储位置
			  段落大小不会随着程序运行
			  而改变
栈：          包含所有局部变量，块变量，
              形式参数和返回值的存储位置
			  段落大小随着程序运行不断
			  改变
              变化方式遵循后进先出的规则
			  每次函数调用在栈中占有
			  专门的存储区域
	          当一个函数调用结束后它所占有
			  的区域被计算机回收
堆            包含所有动态分配的存储位置
              堆中包含的存储位置个数可以
			  看成是无限的
			  堆中存储位置的生命周期由
			  程序员管理，需要在程序中
			  使用语句分配和回收它们
	
预习：
    1.指针
	
作业：
    1.编写程序实现cp命令的功能
	   （源文件路径是b.out,新文件路径
	   是c.out）
	2.编写一个模拟的人员信息管理系统
	   每个人包含三部分信息（整数类型
	   的id,整数类型的age,单精度浮点
	   类型的salary）
	   编写一个程序从键盘得到任意多个
	   人员信息并保存在文件中
	   编写另外一个程序把保存在文件
	   中的所有人员信息打印在屏幕上
	
	
	
	