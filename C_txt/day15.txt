我们使用的计算机中任何存储区的地址必须
    是它自身大小的整数倍（double类型的
	存储区地址可以只是4的整数倍）
这个规则叫做数据对齐

缺省情况下结构体存储区中所有基本类型
    存储区也应该遵守数据对齐的规则

数据对齐会造成结构体内部各子存储区之间
    有浪费的字节

结构体的大小必须是其内部最大基本类型大小
    的整数倍
这个规则叫数据补齐
数据补齐有可能造成结构体最后有浪费的字节

声明结构体时把占地最小的存储区声明在前边，
    占地大的存储区声明在后边，这样可以节省
	空间

枚举也可以用来声明新的数据类型
声明枚举时需要使用enum关键字
使用枚举声明的新类型中包含多个名字，每个
    名字在计算机中使用一个整数表示。	
声明了枚举类型后就可以在程序中直接
    使用这些名字
计算机会把第一个名字分配整数0，向后
    依次类推
可以在声明枚举类型时指定一个名称所对应的
    整数（后面的所有名称都会随着改变）
当希望在程序中把一组名称区分开的时候就
    可以考虑采用枚举类型
当希望让某一个名字和某个具体的整数对应
    时就需要使用宏

联合也可以用来生成新的数据类型
声明联合时需要使用union关键字
联合声明中大括号内同样包含了一组变量
    声明语句（这些语句也不会分配存储区）
联合中所有子变量的地址是一样的，联合中
    所有子变量所占的存储区是重叠的
联合的大小是其中最大子变量的大小
如果程序中有两组变量不可能同时出现，可以
    使用联合让它们占有同样的存储区，这个
	可以节省内存空间
通过使用联合可以让程序以不同方式使用同样
    的存储区

计算机中保存数字的方式分大小端，小端方式
    中数字最后的数位记录在最前边的字节中，
	大端方式刚好相反
大端又叫网络字节序列


	
	
	
	
	
	
	
	
	