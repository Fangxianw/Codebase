
四 如何在计算机中描述这个类型
    使用结构体(struct) 对类型进行描述
          抽象一个时间类 
          特征:
                时  分  秒
          功能:
                显示时间
                走一秒 
                运行 
          09：20：28  
                
    使用类(class)对类型进行描述   
          类中成员 默认是私有的 
          private      只能在类内访问  
          public       可以在类内 和 类外访问 
五.构造函数
    创建一个对象时 只调自动用一次
    和类名相同
    没有返回值类型
    目的是初始化对象
六.一个对象创建的过程
    先根据类型大小分配内存
    处理成员变量 
          如果是基本类型的数据就什么都不做
          类类型的成员 则构建这个成员
    调用这个类型中的构造函数  
七.构造函数的应用
    构造函数可以设计参数 可以有多个构造函数 能形成重载关系
          一旦提供构造函数 则系统提供的默认构造函数 会自动消失。       利用参数的默认值 简化构造函数的个数
    
    如果类中 有const类型的成员 或者 引用类型的成员  则使用
          初始化参数列表是一个不二的选择。 
          初始化参数列表的位置是在构造函数参数列表之后 实现体之前
          （在构造函数执行之前 去调用 ） 
八. 在实际开发中  头文件 和 实现文件 要分离
     ( 时钟 MyTime )  
     头文件:
           条件编译 
           #ifndef  宏
           #define 宏
           #endif 
           声明变量    extern   int  g_var;
           声明函数    void   show();
           类型的定义 
    实现文件：
           导入相应的头文件
           实现全局函数 
           实现成员函数 和 构造函数
                 在函数名前 加 类型名::
                 如果函数的参数 有默认值 则在实现文件中去掉默认值
                 参数名 和 成员变量重名 可以使用初始化参数列表解决
                 全局函数 和 成员函数重名  可以使用 ::作用域解决。 
     
九.  this  指针
    9.1 在构造函数中 this 代表正在被构建的对象的地址。
          在成员函数中,this 指向调用这个函数的对象的地址。
    9.2  this的使用 
         函数的参数上 
         成员函数的返回值    
十.析构函数
    析构函数 和 类型名相同 但函数名前有一个 ~
    在对象销毁之前 自动调用一次
    析构函数是无参的 一个类型 只有一个析构函数
   作用是在对象销毁之前 做一些清理工作。 











  






