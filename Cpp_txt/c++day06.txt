一.只能是成员的运算符
   1.1  =   []
       explicit  防止隐式类型转换
   1.2 ()
       负责类型转换
           把一个单参类型 转换成当前对象类型
           ()是把当前对象类型 变成一个类型 
           operator 类型 (){
               return 类型的对象;
           }  
       函数对象 (可以像函数一样去使用的对象)
           返回值类型  operator()(参数列表){
               return 值;
           }     
   1.3  ->  *
      把一个不是指针的类型 当作指针类型来使用
 
二. new  delete
    new[] delete[]
    2.1 new  delete 比malloc  和 free 多做了什么
       如果类的成员变量是类类型 则自动创建这个成员
       自动处理类型转换
       自动调用构造函数
       
       delete 比free 多调用了析构函数
    2.2 重载 new  delete 
       void*   operator new(size_t size);
       void    operator delete(void *ptr);       
            
            
 三.面向对象的三大特征
    3.1 特征
    封装
    继承
    多态
    3.2 封装
       3.2.1 该公开的就公开化  该私有就隐藏掉
       public:
       private:
       3.2.2 作用
       便于分工 和 分模块
           加密  encode
           解密  decode
       防止不必要的扩展 
           backup()
    3.3 继承
       3.3.1 继承 就是一种传承  可以把父类型中的数据
       传承到子类中。子类除了传承了父类的数据之外 还
       可以对父类型进行扩展。
       3.3.2 语法
       class  A{
           /* A是父类型 */
       };
       class B :public A{      class C:public A{
           /* B 是子类型 */
       };                      };
       class D:public B{
       
       };
       
       3.3.3  继承 vs 组合
       class  Animal{  };
       class  Dog:public Animal { };
       Dog  dog;
       Animal animal;
       dog  is  a Animal  // right
       animal is a Dog   //error   
       子类型对象 一定可以看成一个父类型的对象。 
       
       汽车    和  收音机
               has a             
           
       3.4  继承方式
           公开继承  public 
           保护继承  protected
           私有继承  private                 
       3.5 公开继承 
           在公开继承下 父类型中的数据是公开的 到子类
           中权限是公开的。父类中的保护权限的数据到
           子类中是包含的。父类中私有的数据 到子类中
           会隐藏掉。     
       3.6 私有继承
           在私有继承下  父类中的公开数据 到子类中
           变成私有的。父类中的保护数据 到子类成为
           私有的。父类的私有数据到子类中会隐藏。       
       3.7 保护继承
           保护继承下  父类中的公开数据 和 保护数据
           到子类中都成保护的。父类中私有的数据 到
           子类中是隐藏的。
       
       所谓的继承方式 就是父类能给子类的最大访问权限。
       父类中的私有数据 到子类中一定是隐藏的。     
                
                
四. 指针和 引用的联系 和 区别
    联系:
    引用本质上就是指针。引用完成了指针之前做到的效果
    引用作为参数
        myswap(int& a,int& b);
        myswap(int* a,int* b);
    引用作为返回值
    
    区别:
    1.引用必须进行初始化  指针不是必须的
    2.引用是一个别名  引用的大小和引用对象相关
      指针是一个地址 大小是4个字节
    3.引用一旦初始化 就不能更改引用的对象
      指针随时可以更改指向的对象
    4.有指针的指针      int **
      但没有引用的引用  int &&
    5.没有引用的指针    int&*  //error
      但有指针的引用    int*& (相当于二级指针)  
    6.有指针类型的数组      int * data[10];
      但没有引用类型的数组  int&  data[10];//error
    7.但有数组的引用 
      int  (&rdata)[5];                                   